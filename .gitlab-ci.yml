# This file can be linted using a web tool:
# - https://git.ia.surfsara.nl/SOIL/secure-container/-/ci/lint

# Configuration reference:
# - https://docs.gitlab.com/ee/ci/yaml/

variables:
  NODE_ENV: "test"
  KANIKO_CONFIG: '{"auths":{"$CI_REGISTRY":{"username":"$CI_REGISTRY_USER","password":"$CI_REGISTRY_PASSWORD"}}}'
  DOCKER_IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"

after_script:
  - date

before_script:
  - date
  - export
  - cat /proc/meminfo

stages:
  - sync
  - check
  - build
  - deploy

github_sync:
  stage: sync
  only:
    - master
  image: 
    name: alpine/git
    entrypoint: [""]
  script:
    - git fetch origin master
    - chmod 0600 "${GITHUB_SARA_NL_SSH_KEY}"
    - mkdir ~/.ssh/
    - |
      echo -e "Host github.com
                HostName github.com
                User git
                StrictHostKeyChecking=no  
                IdentityFile ${GITHUB_SARA_NL_SSH_KEY}" > ~/.ssh/config
    - git checkout master
    - git pull --rebase origin master
    - git push --tags git@github.com:sara-nl/data-exchange.git master

backend_lint:
  stage: check
  image: python:3-alpine
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
  script:
    - apk add -U gcc musl-dev
    - pip install black
    - black --check backend/backend backend/surfsara

dexter_test:
  stage: check
  image: mkotsur/scala-mill
  cache:
    paths:
      - .cache
  script:
    - mill -v
    - export COURSIER_CACHE=$CI_PROJECT_DIR/.cache
    - mkdir "$CI_PROJECT_DIR/tasker/.secrets"
    - echo "$GDRIVE_CREDENTIALS_BASE64" | base64 -d > "$CI_PROJECT_DIR/tasker/.secrets/gdrive-credentials.json"
    - cd $CI_PROJECT_DIR/tasker && mill __.test.test && mill __.ctest.test

dexter_build:
  stage: build
  image:
    # See: https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export DOCKER_REGISTRY_PATH="$CI_REGISTRY_IMAGE/tasker"
    - export DOCKERFILE="$CI_PROJECT_DIR/tasker/docker/Dockerfile"
    - export DOCKER_CONTEXT="$CI_PROJECT_DIR/tasker"
    - echo "$KANIKO_CONFIG" > /kaniko/.docker/config.json
    - mkdir "$CI_PROJECT_DIR/tasker/.secrets"
    - echo "$GDRIVE_CREDENTIALS_BASE64" | base64 -d > "$CI_PROJECT_DIR/tasker/.secrets/gdrive-credentials.json"
    - /kaniko/executor --cache=true --context $DOCKER_CONTEXT --dockerfile $DOCKERFILE --destination "$DOCKER_REGISTRY_PATH:$DOCKER_IMAGE_TAG" --destination "$DOCKER_REGISTRY_PATH:$CI_COMMIT_REF_NAME" --destination "$DOCKER_REGISTRY_PATH:latest"
  # only:
  #   - tags

backend_build:
  stage: build
  image:
    # See: https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export DOCKER_REGISTRY_PATH="$CI_REGISTRY_IMAGE/backend"
    - export DOCKERFILE="$CI_PROJECT_DIR/backend/docker/prod.Dockerfile"
    - export DOCKER_CONTEXT="$CI_PROJECT_DIR/backend"
    - echo "$KANIKO_CONFIG" > /kaniko/.docker/config.json
    - /kaniko/executor --cache=true --context $DOCKER_CONTEXT --dockerfile $DOCKERFILE --destination "$DOCKER_REGISTRY_PATH:$DOCKER_IMAGE_TAG" --destination "$DOCKER_REGISTRY_PATH:$CI_COMMIT_REF_NAME" --destination "$DOCKER_REGISTRY_PATH:latest"

frontend_lint:
  stage: check
  image: node:12-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  script:
    - cd frontend
    - yarn install
    - yarn lint

frontend_build:
  stage: build
  image:
    # See: https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export DOCKER_REGISTRY_PATH="$CI_REGISTRY_IMAGE/frontend"
    - export DOCKERFILE="$CI_PROJECT_DIR/frontend/docker/prod.Dockerfile"
    - export DOCKER_CONTEXT="$CI_PROJECT_DIR/frontend"
    - echo "$KANIKO_CONFIG" > /kaniko/.docker/config.json
    - /kaniko/executor --cache=true --context $DOCKER_CONTEXT --dockerfile $DOCKERFILE --destination "$DOCKER_REGISTRY_PATH:$DOCKER_IMAGE_TAG" --destination "$DOCKER_REGISTRY_PATH:$CI_COMMIT_REF_NAME" --destination "$DOCKER_REGISTRY_PATH:latest"

deploy_test2:
  stage: deploy
  image: alpine:3
  only:
    - master
  script:
    - apk add --no-cache openssh
    - chmod 0600 "${TEST2_SSH_KEY}"
    # Variables should be added in https://git.ia.surfsara.nl/SOIL/secure-container/-/settings/ci_cd
    # See: https://docs.gitlab.com/ee/ci/variables/README.html#file-type
    - ssh -oStrictHostKeyChecking=no -i "$TEST2_SSH_KEY" "$TEST2_SSH_ADDRESS"
      ". ~/.profile && export DOCKER_IMAGE_REF_NAME=\"$CI_COMMIT_REF_NAME\"
      DOCKER_IMAGE_TAG=\"$DOCKER_IMAGE_TAG\"
      CI_COMMIT_SHA=\"$CI_COMMIT_SHA\"
      RD_WEBDAV_USERNAME=\"$RD_WEBDAV_USERNAME\"
      RD_WEBDAV_PASSWORD=\"$RD_WEBDAV_PASSWORD\" 
      DJANGO_SECRET_KEY=\"$DJANGO_SECRET_KEY\" &&
      cd data-exchange && git fetch --all && git checkout $CI_COMMIT_SHA &&
      docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d &&
      docker system prune -a -f &&
      docker pull git.ia.surfsara.nl:5050/soil/secure-container/datex:latest
      "

deploy_prod:
  stage: deploy
  image: alpine:3
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^prod\-.*/i
  script:
    - apk add --no-cache openssh
    - chmod 0600 "${PROD_SSH_KEY}"
    # Variables should be added in https://git.ia.surfsara.nl/SOIL/secure-container/-/settings/ci_cd
    # See: https://docs.gitlab.com/ee/ci/variables/README.html#file-type
    - ssh -oStrictHostKeyChecking=no -i "$PROD_SSH_KEY" ubuntu@dataexchange.surfsara.nl
      ". ~/.profile && export DOCKER_IMAGE_REF_NAME=\"$CI_COMMIT_REF_NAME\"
      DOCKER_IMAGE_TAG=\"$DOCKER_IMAGE_TAG\"
      CI_COMMIT_SHA=\"$CI_COMMIT_SHA\"
      RD_WEBDAV_USERNAME=\"$RD_WEBDAV_USERNAME\"
      RD_WEBDAV_PASSWORD=\"$RD_WEBDAV_PASSWORD\"
      DJANGO_SECRET_KEY=\"$DJANGO_SECRET_KEY\" &&
      cd data-exchange && git fetch --all && git checkout $CI_COMMIT_SHA &&
      docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d &&
      docker system prune -a -f &&
      docker pull git.ia.surfsara.nl:5050/soil/secure-container/datex:latest
      "

      
