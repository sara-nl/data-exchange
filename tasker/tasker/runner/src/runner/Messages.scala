package runner

/**
  * Messages used in the DataExchange messaging protocol
  */
object Messages {

  case class ETag(eTag: String)

  case class StartContainer(
                            /**
                              * Id of the task generated by the client. Tasker doesn't require them to be unique,
                              * but in order for the client to make sense of "Done" messages, they'd better be.
                              */
                            taskId: String,
                            /**
                              * Relative path to the data set.
                              */
                            dataPath: String,
                            /**
                              * Relative path to the algorithm code.
                              */
                            codePath: String,
                            /**
                              * Hash of the algorithm. If passed-will be checked before the task is started,
                              * and if it doesn't match - task will be rejected.
                              */
                            codeHash: Option[ETag])

  object Done {
    def success(taskId: String,
                output: String,
                containerOutput: AlgorithmOutput) =
      Done(taskId, "success", output, containerOutput)
    def error(taskId: String,
              output: String,
              containerOutput: AlgorithmOutput) =
      Done(taskId, "error", output, containerOutput)
  }

  case class AlgorithmOutput( /**
                               * Standard output produced by the user Python script
                               */
                             stdout: String,
                             /**
                               * Standard error produced by the user Python script
                               */
                             stderr: String,
                             /**
                               * Strace produced by the user Python script
                               */
                             strace: String)

  case class Done(
                  /**
                    * The task id from [[StartContainer]] command
                    */
                  taskId: String,
                  /**
                    * "success" | "error"
                    */
                  state: String,
                  /**
                    * Output produced by the wrapper script (doesn't include the output of the user script).
                    */
                  output: String,
                  /**
                    * An object, which contains different types of container output
                    */
                  containerOutput: AlgorithmOutput)

}
